global:
  postgresql:
    auth:
      postgresPassword: "password!123"
      database: "peregrine"

postgres:
  enabled: false

# Default values for peregrine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/cdis/peregrine
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {
    nginx.ingress.kubernetes.io/rewrite-target: /$2,
    kubernetes.io/ingress.class: "nginx"
  }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ingress.local
      paths:
        - path: /peregrine(/|$)(.*)
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


env:
- name: GEN3_UWSGI_TIMEOUT
  value: "600"
- name: DICTIONARY_URL
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: dictionary_url
      optional: true
- name: PUBLIC_DATASETS
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: public_datasets
      optional: true
# Signpost is deprecated; replace this w INDEX_CLIENT_HOST block
- name: SIGNPOST_HOST
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: indexd_url
      optional: true
- name: INDEX_CLIENT_HOST
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: indexd_url
      optional: true
- name: GRAPHQL_TIMEOUT
  valueFrom:
    configMapKeyRef:
      name: manifest-peregrine
      key: peregrine_timeout
      optional: true
- name: FENCE_URL
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: fence_url
      optional: true
- name: ARBORIST_URL
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: arborist_url
      optional: true
- name: GEN3_DEBUG
  value: "False"
- name: GEN3_SIDECAR
  value: "False"

volumes:
- name: shared-data
  emptyDir: {}
- name: config-volume
  secret:
    secretName: "peregrine-secret"
- name: creds-volume
  secret:
    secretName: "peregrine-creds"
- name: config-helper
  configMap:
    name: config-helper

volumeMounts:
- name: "shared-data"
  mountPath: "/var/run/gen3"
- name: "config-volume"
  readOnly: true
  mountPath: "/var/www/peregrine/wsgi.py"
  subPath: "wsgi.py"
- name: "creds-volume"
  readOnly: true
  mountPath: "/var/www/peregrine/creds.json"
  subPath: creds.json
- name: "config-volume"
  readOnly: true
  mountPath: "/var/www/peregrine/config_helper.py"
  subPath: config_helper.py

secrets:
  fence:
    db:
      host: 
      user: 
      pass: 
  db:
    host: 
    password: 
    user: 
    database: 