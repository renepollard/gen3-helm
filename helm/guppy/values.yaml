# Default values for guppy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.



#Deployment

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

replicaCount: 1

revisionHistoryLimit: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

templateLabels:
  tags.datadoghq.com/service: "guppy"
  tags.datadoghq.com/version: "2022.08"
  netnolimit: 'yes'
  public: 'yes'

affinity: 
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - guppy
        topologyKey: "kubernetes.io/hostname"

volumes:
  - name: guppy-config
    configMap:
      name: manifest-guppy
      items:
        - key: guppy_config.json
          path: guppy_config.json

automountServiceAccountToken: false

image:
  repository: quay.io/cdis/guppy
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env:
  - name: GUPPY_PORT
    value: "8000"
  - name: GUPPY_CONFIG_FILEPATH
    value: /guppy/guppy_config.json
  - name: GEN3_ES_ENDPOINT
    value: esproxy-service:9200
  - name: GEN3_ARBORIST_ENDPOINT
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: arborist_url
        optional: true
  - name: TIER_ACCESS_LEVEL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        # acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`
        key: tier_access_level
        # for now making it optional so won't break anything
        optional: true
  - name: TIER_ACCESS_LIMIT
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: tier_access_limit
        optional: true
  - name: DD_TRACE_ENABLED
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: dd_enabled
        optional: true
  - name: DD_ENV
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: environment
        optional: true
  - name: DD_SERVICE
    valueFrom:
      fieldRef:
        fieldPath: metadata.labels['tags.datadoghq.com/service']
  - name: DD_VERSION
    valueFrom:
      fieldRef:
        fieldPath: metadata.labels['tags.datadoghq.com/version']
  - name: DD_LOGS_INJECTION
    value: "true"
  - name: DD_PROFILING_ENABLED
    value: "true"
  - name: DD_TRACE_SAMPLE_RATE
    value: "1"
  - name: DD_TRACE_AGENT_HOSTNAME
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP


livenessProbe:
  httpGet:
    path: /_status
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 30
readinessProbe:
  httpGet:
    path: /_status
    port: 8000

containerPort:
  - containerPort: 8000

volumeMounts:
  - name: guppy-config
    readOnly: true
    mountPath: /guppy/guppy_config.json
    subPath: guppy_config.json

resources:
  requests:
    cpu: 0.5
    memory: 1024Mi
  limits:
    cpu: 1
    memory: 2400Mi


#Service and Pod
service:
  type: ClusterIP
  port:
    - protocol: TCP
      port: 80
      targetPort: 8000
      name: http

#Configmap
indices:
  valueFrom: 
    configMapKeyRef:
      name: manifest-global
      key: .guppy.indices
      optional: false
config_index:
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: .guppy.config_index
      optional: false
auth_filter_field:
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: .guppy.auth_filter_field
      optional: false
enable_encrypt_whitelist:
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: .guppy.enable_encrypt_whitelist
      optional: true
encrypt_whitelist:
  valueFrom:
    configMapKeyRef:
      name: manifest-global
      key: .guppy.encrypt_whitelist
      optional: true


#Ingress
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local