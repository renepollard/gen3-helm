# Default values for argo-wrapper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.



#Deployment
podAnnotations: {"gen3.io/network-ingress": "argo-wrapper"}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

replicaCount: 1

revisionHistoryLimit: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

datadog: argo-wrapper
netnolimit: 'yes'
public: 'yes'

affinity: 
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - argo-wrapper
        topologyKey: "kubernetes.io/hostname"

volumes:
  - name: argo-config
    configMap:
      name: manifest-argo
      items:
        - key: argo.json
          path: argo.json

image:
  repository: quay.io/cdis/argo-wrapper
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

livenessProbe:
  httpGet:
    path: /test
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 30

ports:
  - containerPort: 8000
    protocol: TCP

volumeMounts:
  - name: argo-config
    readOnly: true
    mountPath: /argo.json
    subPath: argo.json

resources:
  limits:
    cpu: 100m
    memory: 128Mi


#Service and Pod
service:
  type: ClusterIP
  port: 8000



#Configmap
scaling_groups:
  valueFrom: 
    configMapKeyRef:
      name: manifest-global
      key: .scaling_groups
      optional: false
s3_bucket: 
  valueFrom: 
    configMapKeyRef:
      name: manifest-global
      key: .argo-wrapper."s3-bucket"
      optional: false
internal_s3_bucket:
  valueFrom: 
    configMapKeyRef:
      name: manifest-global
      key: .argo-wrapper."internal-s3-bucket"
      optional: false
environment:
  valueFrom: 
    configMapKeyRef:
      name: manifest-global
      key: .argo-wrapper.environment
      optional: false
pvc:
  valueFrom: 
    configMapKeyRef:
      name: manifest-global
      key: .argo-wrapper.pvc
      optional: false

#Ingress
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local