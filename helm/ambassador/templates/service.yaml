apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rbac.rbacServiceName }}
  labels:
    service: {{ .Values.rbac.rbacServiceName }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: {{ .Values.rbac.rbacServiceName }}
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.port }}
      nodePort: null
  selector:
    {{- include "ambassador.selectorLabels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ambassador
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - services
  - secrets
  - endpoints
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ambassador-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador
subjects:
- kind: ServiceAccount
  name: ambassador
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador
  name: ambassador-service
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: proxy
  selector:
    service: ambassador