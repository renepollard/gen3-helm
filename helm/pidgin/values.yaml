# Default values for pidgin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.



# Deployment

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

replicaCount: 1

revisionHistoryLimit: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

templateLabels:
  tags.datadoghq.com/service: "pidgin"
  tags.datadoghq.com/version: "2022.08"
  netnolimit: 'yes'
  public: 'yes'

affinity: 
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - pidgin
        topologyKey: "kubernetes.io/hostname"

automountServiceAccountToken: false

image:
  repository: quay.io/cdis/pidgin
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env:
  - name: DD_ENABLED
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: dd_enabled
        optional: true
  - name: DD_ENV
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: environment
        optional: true
  - name: DD_SERVICE
    valueFrom:
      fieldRef:
        fieldPath: metadata.labels['tags.datadoghq.com/service']
  - name: DD_VERSION
    valueFrom:
      fieldRef:
        fieldPath: metadata.labels['tags.datadoghq.com/version']
  - name: DD_LOGS_INJECTION
    value: "true"
  - name: DD_PROFILING_ENABLED
    value: "true"
  - name: DD_TRACE_SAMPLE_RATE
    value: "1"
  - name: DD_AGENT_HOST
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  - name: GEN3_DEBUG
    value: "False"

livenessProbe:
  httpGet:
    path: /_status
    port: 80
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 30
readinessProbe:
  httpGet:
    path: /_status
    port: 80

containerPort:
  - containerPort: 80
  - containerPort: 443

resources:
  # limits:
  #   cpu: 1
  #   memory: 512Mi


#Service and Pod
service:
  type: ClusterIP
  port:
    - protocol: TCP
      port: 80
      targetPort: 80 
      name: http
    - protocol: TCP 
      port: 443 
      targetPort: 443
      name: https


#Ingress
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local