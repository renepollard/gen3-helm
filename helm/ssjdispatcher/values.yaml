# Default values for ssjdispatcher.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

#podAnnotations: {}

#podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

#affinity: {}

selectorLabels:
  app: ssjdispatcher

labels:
  app: ssjdispatcher
  release: production
  netnolimit: "yes"
  public: "yes"
  #GEN3_DATE_LABEL

podSecurityContext:
  runAsUser: 1000
  fsGroup: 1000

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - ssjdispatcher
        topologyKey: "kubernetes.io/hostname"
volumes:
  - name: ssjdispatcher-creds-volume
    secret:
      secretName: "ssjdispatcher-creds"
volumeMounts:
  - name: "ssjdispatcher-creds-volume"
    readOnly: true
    mountPath: "/credentials.json"
    subPath: credentials.json

env:
  - name: AWS_REGION
    value: us-east-1
  - name: AWS_STS_REGIONAL_ENDPOINTS
    value: regional
  - name: GEN3_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: JOB_NUM_MAX
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: dispatcher_job_num
  - name: JOB_IMAGES
    valueFrom:
      configMapKeyRef:
        name: manifest-ssjdispatcher
        key: job_images

resources:
  requests:
    cpu: 0.1
    memory: 128Mi
  limits:
    cpu: 1.0
    memory: 2400Mi

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

automountServiceAccountToken: true
