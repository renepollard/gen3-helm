# Default values for metadata.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.



# Deployment
releaseLabel: "production"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

replicaCount: 1

revisionHistoryLimit: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

templateLabels:
  netnolimit: 'yes'
  public: 'yes'
  userhelper: 'yes'

affinity: 
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - metadata
        topologyKey: "kubernetes.io/hostname"

automountServiceAccountToken: false

image:
  repository: quay.io/cdis/metadata-service
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

volumes:
  - name: config-volume-g3auto
    secret:
      secretName: metadata-g3auto
  # This volume may or may not be needed or available. See kube-setup-metadata.sh and note that this
  # is only available if a <manifest dir>/metadata directory exists.
  - name: config-volume
    secret:
      secretName: metadata-config
      optional: true
  # This volume may or may not be needed or available. See kube-setup-metadata.sh and note that this
  # may not exist if the commons does not have any metadata manifest configuration.
  - name: config-manifest
    configMap:
      name: manifest-metadata
      optional: true

env:
  - name: GEN3_DEBUG
    value: "False"
  - name: GEN3_ES_ENDPOINT
    value: http://esproxy-service:9200
  - name: USE_AGG_MDS
    valueFrom:
      configMapKeyRef:
        name: manifest-metadata
        key: USE_AGG_MDS
        optional: true
  - name: AGG_MDS_NAMESPACE
    valueFrom:
      configMapKeyRef:
        name: manifest-metadata
        key: AGG_MDS_NAMESPACE
        optional: true

livenessProbe:
  httpGet:
    path: /_status
    port: 80
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 30
readinessProbe:
  httpGet:
    path: /_status
    port: 80

containerPort:
  - containerPort: 80

volumeMounts:
  - name: config-volume-g3auto
    readOnly: true
    mountPath: /src/.env
    subPath: metadata.env
  - name: config-volume
    readOnly: true
    mountPath: /aggregate_config.json
    subPath: aggregate_config.json
  - name: config-manifest
    readOnly: true
    mountPath: /metadata.json
    subPath: json

resources:
  requests:
    cpu: 0.4
    memory: 512Mi
  limits:
    cpu: 1
    memory: 2048Mi

# Init Container
initContainerName: metadata-db-migrate

initVolumeMounts:
  - name: config-volume-g3auto
    readOnly: true
    mountPath: /src/.env
    subPath: metadata.env

initResources:
  limits:
    cpu: 0.8
    memory: 512Mi

command: ["/bin/sh"]

args:
  - "-c"
  - |
    /env/bin/alembic upgrade head

#Service and Pod
serviceAnnotations:
  getambassador.io/config: |
    ---
    apiVersion: ambassador/v1
    ambassador_id: "gen3"
    kind:  Mapping
    name:  metadata_mapping
    prefix: /index/
    service: http://metadata-service:80

service:
  type: ClusterIP
  port:
    - protocol: TCP
      port: 80
      targetPort: 80 
      name: http

#Configmap
USE_AGG_MDS:
  valueFrom: 
    configMapKeyRef:
      name: manifest-global
      key: .metadata.USE_AGG_MDS
      optional: true
AGG_MDS_NAMESPACE:
  valueFrom: 
    configMapKeyRef:
      name: manifest-global
      key: .metadata.AGG_MDS_NAMESPACE
      optional: true

#Ingress
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local