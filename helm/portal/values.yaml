# Default values for portal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

selectorLabels:
  app: portal

revisionHistoryLimit: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 2
    maxUnavailable: 25%

labels:
  app: portal
  public: "yes"
  #GEN3_DATE_LABEL

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - portal
        topologyKey: "kubernetes.io/hostname"

automountServiceAccountToken: false

volumes:
  - name: ca-volume
    secret:
      secretName: "service-ca"
  - name: config-volume
    secret:
      secretName: "portal-config"
  - name: sponsor-img-volume
    secret:
      secretName: "portal-sponsor-config"
  - name: privacy-policy
    configMap:
      name: "privacy-policy"
  - name: cert-volume
    secret:
      secretName: "cert-portal-service"


resources:
  requests:
    cpu: 0.6
    memory: 512Mi
  limits:
    cpu: 2.0
    memory: 4096Mi


env:
  - name: HOSTNAME
    value: revproxy-service
  # disable npm 7's brand new update notifier to prevent Portal from stuck at starting up
  # see https://github.com/npm/cli/issues/3163
  - name: NPM_CONFIG_UPDATE_NOTIFIER
    value: "false"
  - name: APP
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: portal_app
  - name: GEN3_BUNDLE
    valueFrom:
      configMapKeyRef:
        name: manifest-portal
        key: GEN3_BUNDLE
        optional: true
  - name: LOGOUT_INACTIVE_USERS
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: logout_inactive_users
        optional: true
  - name: WORKSPACE_TIMEOUT_IN_MINUTES
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: workspace_timeout_in_minutes
        optional: true
  - name: TIER_ACCESS_LEVEL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        # acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`
        key: tier_access_level
        # for now making it optional so won't break anything
        optional: true
  - name: TIER_ACCESS_LIMIT
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: tier_access_limit
        optional: true
  - name: FENCE_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: fence_url
        optional: true
  - name: INDEXD_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: indexd_url
        optional: true
  - name: WORKSPACE_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: workspace_url
        optional: true
  - name: MANIFEST_SERVICE_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: manifest_service_url
        optional: true
  - name: WTS_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: wts_url
        optional: true
  - name: PRIVACY_POLICY_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: privacy_policy_url
        optional: true
  - name: MAPBOX_API_TOKEN
    # Optional token for mapbox api
    valueFrom:
      configMapKeyRef:
        name: global
        key: mapbox_token
        optional: true
  - name: DATADOG_APPLICATION_ID
    # Optional application ID for Datadog
    valueFrom:
      secretKeyRef:
        name: portal-datadog-config
        key: datadog_application_id
        optional: true
  - name: DATADOG_CLIENT_TOKEN
    # Optional client token for Datadog
    valueFrom:
      secretKeyRef:
        name: portal-datadog-config
        key: datadog_client_token
        optional: true
  - name: DATA_UPLOAD_BUCKET
    # S3 bucket name for data upload, for setting up CSP
    #GEN3_DATA_UPLOAD_BUCKET|-value: ""-|
  - name: BASENAME
    value: /portal

volumeMounts:
  - name: "cert-volume"
    readOnly: true
    mountPath: "/mnt/ssl/service.crt"
    subPath: "service.crt"
  - name: "cert-volume"
    readOnly: true
    mountPath: "/mnt/ssl/service.key"
    subPath: "service.key"
  - name: "ca-volume"
    readOnly: true
    mountPath: "/usr/local/share/ca-certificates/cdis/cdis-ca.crt"
    subPath: "ca.pem"
  - name: "config-volume"
    mountPath: "/data-portal/data/config/gitops.json"
    subPath: "gitops.json"
  - name: "config-volume"
    mountPath: "/data-portal/custom/logo/gitops-logo.png"
    subPath: "gitops-logo.png"
  - name: "config-volume"
    mountPath: "/data-portal/custom/createdby/gitops.png"
    subPath: "gitops-createdby.png"
  - name: "config-volume"
    mountPath: "/data-portal/custom/favicon/gitops-favicon.ico"
    subPath: "gitops-favicon.ico"
  - name: "config-volume"
    mountPath: "/data-portal/custom/css/gitops.css"
    subPath: "gitops.css"
  - name: "sponsor-img-volume"
    mountPath: "/data-portal/custom/sponsors/gitops-sponsors"
  - name: "privacy-policy"
    readOnly: true
    mountPath: "/data-portal/custom/privacy_policy.md"
    subPath: "privacy_policy.md"
